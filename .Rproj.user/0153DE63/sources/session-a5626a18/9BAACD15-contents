

folder_kayser <- list.files(here("08 Side products", "CIP_dynamic"))
parlgov <- read_csv("https://www.parlgov.org/data/parlgov-development_csv-utf-8/view_party.csv")
write_csv_arrow(parlgov, here("01 Raw data", "Controls and other", "parlgov_parties.csv"))

# Read in the data
map_dfr(folder_kayser, ~{
  read_delim(here("08 Side products", "CIP_dynamic", .x), delim = ";", 
             locale = locale(decimal_mark = ",")) %>%
    clean_names() %>%
    mutate(excluding_parlgov_id = as.numeric(as.character(excluding_parlgov_id))) %>%
    remove_empty(which = c("rows", "cols")) 
  }) -> kayser

## modify germany variable 
kayser <- kayser %>%
  mutate(country = ifelse(is.na(country) & !is.na(germany), "Germany", country),
         date = as.Date(as.character(sub("^(..)(..)(....)$", "\\1-\\2-\\3", date)), "%d-%m-%Y"),
         iso3c = countrycode(country, "country.name.en", "iso3c")) %>%
  select(-germany)

## convert to annual dataset
kayser_annual <- kayser %>%
  group_by(country, year, parlgov_id) %>%
  mutate(across(.cols = c(starts_with("pr_ingov"), "polls"), 
                .fns = ~mean(.x, na.rm = TRUE),
                .names = "{.col}_annual")) %>%
  ungroup() %>%
  select(-c(pr_ingov_mean, pr_ingov_lower, pr_ingov_upper, polls, date)) %>%
  distinct(country, year, parlgov_id, pr_ingov_mean_annual, .keep_all = TRUE) %>%
  select(country, iso3c, year, dplyr::everything())

## merge with parlgov dataset 
kayser_parlgov <- kayser_annual %>%
  left_join(parlgov, by = c("parlgov_id" = "party_id")) 
  

kayser_green <- kayser_parlgov %>%
  filter(grepl("Green", family_name)) 
