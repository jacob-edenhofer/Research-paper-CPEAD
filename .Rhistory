geom_tile(aes(fill = obs_value))
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = year, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile()
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile()
# Distinguish between different types of switches from 0 to 10 and 10 to 0
capmf_clim_adv[, switch := case_when(switch == 1 & obs_value == 10 ~ "abolition",
switch == 1 & obs_value == 0 ~ "establishment",
TRUE ~ "Other")]
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile()
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_avd[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = "lag") == 0 ~ "adoption",
obs_value == 0 & shift(obs_value, 1, fill = "lag") == 10 ~ "abolition",
TRUE ~ "No change")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_avd[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = "lag") == 0 ~ "adoption",
obs_value == 0 & shift(obs_value, 1, fill = "lag") == 10 ~ "abolition",
TRUE ~ "No change")]
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = "lag") == 0 ~ "adoption",
obs_value == 0 & shift(obs_value, 1, fill = "lag") == 10 ~ "abolition",
TRUE ~ "No change")]
# capmf_clim_adv[, switch := as.numeric(switch)]
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile() +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
labs(title = "Climate policy stringency in Europe",
x = "Year",
y = "Climate policy stringency") +
theme_minimal() +
theme(legend.position = "bottom")
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile() +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Climate policy stringency in Europe",
x = "Year",
y = "Climate policy stringency") +
theme_minimal() +
theme(legend.position = "bottom")
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.5) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Climate policy stringency in Europe",
x = "Year",
y = "Climate policy stringency") +
theme_minimal() +
theme(legend.position = "bottom")
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Climate policy stringency in Europe",
x = "Year",
y = "Climate policy stringency") +
theme_minimal() +
theme(legend.position = "bottom")
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Climate policy stringency in Europe",
x = "Year",
y = "Climate policy stringency") +
theme_bw() +
theme(legend.position = "bottom")
max(capmf_clim_adv$time_period)
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom")
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer(palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer("", palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = "lag") == 0 ~ "Adoption",
obs_value == 0 & shift(obs_value, 1, fill = "lag") == 10 ~ "Abolition",
TRUE ~ "No change")]
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer("", palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
View(capmf_clim_adv)
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = "lag") == 0 ~ "Adoption",
obs_value == 0 & shift(obs_value, 1, fill = "lag") == 10 ~ "Abolition",
TRUE ~ "No change")]
# capmf_clim_adv[, switch := as.numeric(switch)]
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer("", palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = NA) == 0 ~ "Adoption",
obs_value == 0 & shift(obs_value, 1, fill = NA) == 10 ~ "Abolition",
TRUE ~ "No change")]
# capmf_clim_adv[, switch := as.numeric(switch)]
#
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer("", palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = NA) == 0 ~ "Adoption",
obs_value == 0 & shift(obs_value, 1, fill = NA) == 10 ~ "Abolition",
TRUE ~ "No change")]
# Plot data
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer("", palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
capmf_clim_adv[ref_area == "AUT"]
capmf_clim_adv[ref_area == "AUT", ..(ref_area, time_period, obs_value, switch)]
capmf_clim_adv[ref_area == "AUT", .(ref_area, time_period, obs_value, switch)]
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv[, switch := case_when(obs_value == 10 & shift(obs_value, 1, fill = NA, type = "lag") == 0 ~ "Adoption",
obs_value == 0 & shift(obs_value, 1, fill = NA, type = "lag") == 10 ~ "Abolition",
TRUE ~ "No change")]
# Plot data
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_brewer("", palette = "Set1") +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
# Plot data
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_manual("", values = c("Adoption" = "forestgreen", "Abolition" = "firebrick", "No change" = "gray70")) +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
# load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# Import data
capmf <- read_csv_arrow(paste0(here(), "/01 Raw data/Climate policy/CAPMF_Official.csv")) %>% clean_names()
capmf <- as.data.table(capmf)
# prune data
capmf_clim_adv <- capmf[clim_act_pol == "LEV4_AB_ESTABL" & reference_area != "European Union"]
# Create variable for continent
capmf_clim_adv[, continent := countrycode(reference_area, "country.name.en", "region")]
# Create dummy variable for when obs_value switches from zero to non-zero, grouping by reference_area
capmf_clim_adv <- capmf_clim_adv %>%
group_by(reference_area) %>%
mutate(
switch = case_when(
obs_value == 10 & lag(obs_value, default = NA) == 0 ~ "Adoption",
obs_value == 0 & lag(obs_value, default = NA) == 10 ~ "Abolition",
TRUE ~ "No change"
)
) %>%
ungroup()
# Plot data
capmf_clim_adv[grep("Europe", continent)] %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_manual("", values = c("Adoption" = "forestgreen", "Abolition" = "firebrick", "No change" = "gray70")) +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
View(capmf_clim_adv)
# Plot data
capmf_clim_adv %>%
filter(grepl("Europe", continent))
# Plot data
capmf_clim_adv %>%
filter(grepl("Europe", continent)) %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_manual("", values = c("Adoption" = "forestgreen", "Abolition" = "firebrick", "No change" = "gray70")) +
labs(title = "Evolution of climate advisory bodies in Europe, 1990 - 2022",
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
ggsave("clim_evolution.png", width = 9, height = 6, dpi = 300)
## Create some plots by looping over unique continent values
map(unique(capmf_clim_adv$continent), ~{
capmf_clim_adv %>%
filter(continent == .x) %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_manual("", values = c("Adoption" = "forestgreen", "Abolition" = "firebrick", "No change" = "gray70")) +
labs(title = paste("Evolution of climate advisory bodies in", .x, "1990 - 2022"),
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
})
patchwork::wrap_plots(ncol = 3) %>%
ggsave("clim_evolution_continents.png", width = 12, height = 8, dpi = 300)
## Create some plots by looping over unique continent values
map(unique(capmf_clim_adv$continent), ~{
capmf_clim_adv %>%
filter(continent == .x) %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_manual("", values = c("Adoption" = "forestgreen", "Abolition" = "firebrick", "No change" = "gray70")) +
labs(title = paste("Evolution of climate advisory bodies in", .x, "1990 - 2022"),
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
}) %>%
patchwork::wrap_plots(ncol = 3) %>%
ggsave("clim_evolution_continents.png", width = 12, height = 8, dpi = 300)
## Create some plots by looping over unique continent values
map(unique(capmf_clim_adv$continent), ~{
capmf_clim_adv %>%
filter(continent == .x) %>%
ggplot(aes(x = time_period, y = reference_area, fill = factor(switch))) +
# heatmap
geom_tile(alpha = 0.8) +
scale_x_continuous(breaks = seq(1990, 2020, 5)) +
scale_fill_manual("", values = c("Adoption" = "forestgreen", "Abolition" = "firebrick", "No change" = "gray70")) +
labs(title = paste("Evolution of climate advisory bodies in", .x, "1990 - 2022"),
x = "Year",
y = "") +
theme_bw() +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, size = 14),
)
}) %>%
patchwork::wrap_plots(ncol = 3)
