legend.position = "bottom"
)
print(p2)
# Save plot
save_plot(plot = p2, path = paste0(output_dir, "/Figures/Descriptive plots/Variation/TS/", file_name, "_disagg.png"))
}, mc.cores = cores)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + clim_act_pol + half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + clim_act_pol,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + clim_act_pol,
fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + clim_act_pol,
fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + clim_act_pol,
# fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + clim_act_pol,
fsplit = ~emu,
data = oecd_merged
)
#
oecd_merged %>%
filter(reference_area %in% c("Austria", "United Kingdom", "Germany", "Sweden", "France", "Italy",
"Spain", "Netherlands"),
half_decade != "2020-2022"
) %>%
mutate(country_year = paste0(reference_area, " ", time_period)) %>%
ggplot(aes(x = corp_all, y = obs_value, color = time_period)) +
geom_point() +
ggrepel::geom_text_repel(aes(label = country_year), size = 2) +
geom_smooth(se = F) +
scale_color_viridis_c("", direction = -1, option = "mako") +
facet_wrap(~clim_act_pol) +
labs(title = "Scatter plot of the dependent variable (obs_value) against the moderating variable (corp_all)",
x = "obs_value",
y = "corp_all",
color = "Country"
) +
theme_bw() +
theme(legend.position = "bottom") +
# Increase width of colorbar
guides(color = guide_colorbar(barwidth = 10))
#
oecd_merged %>%
filter(reference_area %in% c("Austria", "United Kingdom", "Germany", "Sweden", "France", "Italy",
"Spain", "Netherlands"),
half_decade != "2020-2022"
) %>%
mutate(country_year = paste0(reference_area, " ", time_period)) %>%
ggplot(aes(x = corp_all, y = obs_value, color = time_period)) +
geom_point() +
ggrepel::geom_text_repel(aes(label = country_year), size = 2) +
geom_smooth(se = F) +
scale_color_viridis_c("", direction = -1, option = "mako") +
facet_wrap(~climate_actions_and_policies) +
labs(title = "Scatter plot of the dependent variable (obs_value) against the moderating variable (corp_all)",
x = "Corporatism score",
y = "Climate stringency"
) +
theme_bw() +
theme(legend.position = "bottom") +
# Increase width of colorbar
guides(color = guide_colorbar(barwidth = 10))
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + clim_act_pol,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + corp_all,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + corp_all,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + corp_all,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + corp_all,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita + dis_gall | reference_area + climate_actions_and_policies,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + climate_actions_and_policies + co2_per_capita,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + climate_actions_and_policies + co2_per_capita,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + climate_actions_and_policies + co2_per_capita,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + climate_actions_and_policies + co2_per_capita,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + climate_actions_and_policies + co2_per_capita,
fsplit = half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all | reference_area + climate_actions_and_policies + co2_per_capita,
fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
# fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + half_decade + climate_actions_and_policies,
# fsplit = ~half_decade,
data = oecd_merged
)
decades
oecd_merged$decades
oecd_merged[, decade_fe := case_when(half_decade %in% c("1990-1994", "1995-1999") ~ "1990s",
half_decade %in% c("2000-2004", "2005-2009") ~ "2000s",
half_decade %in% c("2010-2014", "2015-2019") ~ "2010s",
half_decade %in% c("2020-2022") ~ "2020s",
TRUE ~ "Other")]
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies + decade_fe,
# fsplit = ~half_decade,
data = oecd_merged
)
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + decade_fe,
# fsplit = ~half_decade,
data = oecd_merged
)
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + half_decade,
# fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
# fsplit = ~half_decade,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
fsplit = ~region,
data = oecd_merged
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
data = oecd_merged,
fsplit = ~decade_fe
)
#
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
data = oecd_merged,
ggplot = T
)
# Cross-sectional variation in a given half-decade
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + half_decade,
data = oecd_merged
)
# Cross-sectional variation in a given half-decade
fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + time_period,
data = oecd_merged
)
# Within-country variation over time
wct <- fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
data = oecd_merged,
ggplot = T
)
# Cross-sectional variation in a given half-decade/year
cvt <- fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + time_period,
data = oecd_merged,
ggplot = T
)
wct
# Clean plot
wct +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = "Within-country variation in climate stringency and CO2 emissions",
x = "Corporatism score",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw()
# Clean plot
wct +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = "Within-country variation in climate stringency and CO2 emissions",
x = "Corporatism score (residualised)",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_text(size = 12),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Clean plot
wct +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = "Within-country variation in climate stringency and CO2 emissions",
x = "Corporatism score (residualised)",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Clean plot
cvt +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Corporatism score (residualised)",
# title = "Cross-sectional variation in climate stringency and CO2 emissions",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Clean plot
wct_cleaned <- wct +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Corporatism score (residualised)",
# title = "Within-country variation in climate stringency and CO2 emissions",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Save plot
save_plot(plot = wct_cleaned, path = paste0(output_dir, "/Figures/Descriptive plots/Variation/Within_country.png"))
# Cross-sectional variation in a given half-decade/year
cvt <- fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + time_period,
data = oecd_merged,
ggplot = T
)
# Clean plot
cvt_cleaned <- cvt +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Corporatism score (residualised)",
# title = "Cross-sectional variation in climate stringency and CO2 emissions",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Save plot
save_plot(plot = cvt_cleaned, path = paste0(output_dir, "/Figures/Descriptive plots/Variation/Cross_sectional.png"))
# Cross-sectional variation in a given half-decade/year
cvt <- fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + time_period,
cluster = ~time_period, data = oecd_merged,
ggplot = T
)
cvt
# Clean plot
cvt_cleaned <- cvt +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Corporatism score (residualised)",
# title = "Cross-sectional variation in climate stringency and CO2 emissions",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Save plot
save_plot(plot = cvt_cleaned, path = paste0(output_dir, "/Figures/Descriptive plots/Variation/Cross_sectional.png"))
# Within-country variation over time
wct <- fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | reference_area + climate_actions_and_policies,
vcov = "HC1",
data = oecd_merged,
ggplot = T
)
# Clean plot
wct_cleaned <- wct +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Corporatism score (residualised)",
# title = "Within-country variation in climate stringency and CO2 emissions",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Save plot
save_plot(plot = wct_cleaned, path = paste0(output_dir, "/Figures/Descriptive plots/Variation/Within_country.png"))
# Cross-sectional variation in a given half-decade/year
cvt <- fwlplot::fwl_plot(fml = obs_value ~ corp_all + co2_per_capita | climate_actions_and_policies + time_period,
vcov = "HC1",
data = oecd_merged,
ggplot = T
)
# Clean plot
cvt_cleaned <- cvt +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(x = "Corporatism score (residualised)",
# title = "Cross-sectional variation in climate stringency and CO2 emissions",
y = "Climate stringency (residualised)",
color = "Climate policy instrument",
shape = "Climate policy instrument") +
theme_bw() +
theme(strip.background = element_blank(),
strip.text = element_blank(),
plot.title = element_text(hjust = 0.5, size = 14),
legend.position = "bottom"
)
# Save plot
save_plot(plot = cvt_cleaned, path = paste0(output_dir, "/Figures/Descriptive plots/Variation/Cross_sectional.png"))
cvt_cleaned
#############################
# Preliminaries
#############################
# Turn off scientific notation
options(scipen = 999)
# Load libraries, custom functions, and the variable dictionary
source(here::here("02 Cleaning data code", "Custom scripts", "custom_packages.R"))
source(here::here("02 Cleaning data code", "Custom scripts", "custom_functions.R"))
source(here::here("02 Cleaning data code", "Custom scripts", "var_dictionary.R"))
# Define directories
raw_data_dir <- file.path(here(), "01 Raw data")
cleaned_data_dir <- file.path(here(), "03 Cleaned data")
output_dir <- file.path(here(), "06 Figures and tables")
# Set number of cores (this depends on your working system; on windows, use 1; on MAC, use parallel::detectCores() and set the appropriate number)
cores <- ifelse(Sys.info()["sysname"] == "Windows", 1, parallel::detectCores() - 1)
#############################
# Import data
#############################
# List cleaned data
cleaned_data <- list.files(cleaned_data_dir, recursive = T, full.names = T)
# Import data
raw_data <- mclapply(cleaned_data, function(x){
import_data(x)
}, mc.cores = cores) %>%
setNames(
nm = tools::file_path_sans_ext(basename(cleaned_data))
)
#############################
# Data wrangling
#############################
# Extract oecd_stringency_LEV1 as data.table object from the list
oecd_merged <- as.data.table(raw_data[["oecd_stringency_LEV1"]])
# Columns to clean
col_clean <- names(oecd_merged)[grepl("(_x|_y)$", names(oecd_merged))]
# Keep only one of the columns that have the save name, except for the suffix and delete the other one
for(j in col_clean){
col_new_name <- gsub("_x|_y", "", j)
print(col_new_name)
# Check if the column already exists
if(col_new_name %in% names(oecd_merged)){
oecd_merged <- oecd_merged[, (j) := NULL]
} else {
oecd_merged <- oecd_merged[, (col_new_name) := get(j)]
oecd_merged <- oecd_merged[, (j) := NULL]
}
}
# Extract different columns for the dependent, moderating, and independent variables
dv_var <- names(oecd_merged)[grepl("obs_value", names(oecd_merged))]
corp_var <- names(oecd_merged)[grepl("corp|ud_|netu_|um_|bc|tum|cov|nec|nuc_", names(oecd_merged))]
mod_var <- names(oecd_merged)[grepl("pr_ingov_mean|openc|eco_cip", names(oecd_merged))]
control_var <- names(oecd_merged)[grepl("gdp|dis|renewable|co2|ind|clim_act|pop|measure_|year|country", names(oecd_merged))]
selected_columns <- c(dv_var, corp_var, mod_var, control_var)
# Extract oecd_stringency_LEV1 as data.table object from the list
oecd_merged <- as.data.table(raw_data[["oecd_stringency_LEV2"]])
# Columns to clean
col_clean <- names(oecd_merged)[grepl("(_x|_y)$", names(oecd_merged))]
View(oecd_merged)
################################
# Preliminaries
################################
# load packages
library(tidyverse)
library(data.table)
library(countrycode)
library(tidylog)
library(readxl)
library(openxlsx)
library(here)
library(janitor)
library(tools)
library(arrow)
library(haven)
library(patchwork)
# import data
data_folder <- list.files(paste0(here(), "/01 Raw data"))
## select all elements, except for Codebooks
data_folder <- data_folder[!grepl("Codebooks", data_folder)]
## write function to import data from the folders
import_data <- function(folder_path){
if(grepl("csv", folder_path)){
if(grepl("lprdata_", folder_path)){
data <- read_delim(folder_path, delim = ";") %>%
clean_names()
} else if(grepl("ICTWSS", folder_path)){
data <- read_csv(folder_path, na = c("-99", "-88", "Missing", "NA")) %>%
remove_empty(which = c("cols", "rows")) %>%
clean_names()
} else {
data <- read_csv_arrow(folder_path) %>%
clean_names()
}
} else if(grepl("xlsx", folder_path)){
if(grepl("GallupAnalytics", folder_path)){
data <- read_xlsx(folder_path, skip = 6) %>%
clean_names() %>%
remove_empty(which = c("cols", "rows"))
} else {
data <- read_xlsx(folder_path) %>%
clean_names()
}
} else if(grepl("rds|RDS", folder_path)){
data <- readRDS(folder_path) %>%
clean_names()
} else if(grepl("dta", folder_path)){
data <- read_dta(folder_path) %>%
clean_names()
} else {
next
}
}
# import data
for(i in 1:length(data_folder)){
list_data <- list.files(paste0(here(), "/01 Raw data/", data_folder[i]), full.names = T)
list_data <- list_data[!grepl("CIP_dynamic", list_data)]
map(list_data, ~{
# extract file names
file_name <- file_path_sans_ext(basename(.x))
data_name <- str_to_lower(str_replace_all(gsub("\\..*", "", file_name), "-", "_"))
# import data
import_data(.x) %>%
## save this in global environment using assign() function and name it as the file name, but delete suffix (.csv, .rds, and so on)
assign(data_name, ., envir = globalenv())
})
}
# import kayser/rehmert cip data
## specify folder path
folder_kayser <- list.files(here("01 Raw data", "Controls and other", "CIP_dynamic"))
## read in the data
map_dfr(folder_kayser, ~{
read_delim(here("01 Raw data", "Controls and other", "CIP_dynamic", .x), delim = ";",
locale = locale(decimal_mark = ",")) %>%
clean_names() %>%
mutate(excluding_parlgov_id = as.numeric(as.character(excluding_parlgov_id))) %>%
remove_empty(which = c("rows", "cols"))
}) -> kayser_cip
View(kayser_cip)
## save data
write_csv(kayser_cip, here("01 Raw data", "Controls and other", "CIP_dynamic", "kayser_cip.csv"))
## read in the data
map_dfr(folder_kayser, ~{
read_delim(here("01 Raw data", "Controls and other", "CIP_dynamic", .x), delim = ";",
locale = locale(decimal_mark = ",")) %>%
clean_names() %>%
mutate(excluding_parlgov_id = as.numeric(as.character(excluding_parlgov_id))) %>%
remove_empty(which = c("rows", "cols"))
}) -> kayser_cip
## save data
write_csv(kayser_cip, here("01 Raw data", "Controls and other", "cip_dynamic_all.csv"))
