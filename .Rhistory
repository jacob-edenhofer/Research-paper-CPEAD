geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var1, "on", dv, "by", var2),
x = var2) +
theme_minimal()
plots_list[[model_name]] <- plot
})
################################
# Preliminaries
################################
# Load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For econometric models
library(kableExtra) # For enhanced table output
library(patchwork)  # For combining plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(haven)     # For reading Stata files
# Set up path
data_path <- here("03 Cleaned data", "Finnegan extended", "finnegan_merged.rds")
finnegan_merged <- readRDS(data_path)
finnegan_merged <- finnegan_merged %>% zap_labels()
################################
# Helper Functions
################################
# Function to run models and handle errors
run_model <- function(formula, data, model_name) {
tryCatch({
model <- feols(fml = formula, data = data)
}, error = function(e) {
message("Error in model for ", model_name, ": ", e$message)
NULL
})
}
################################
# Analysis: Extending Finnegan's Analysis
################################
# Define variable names and models
variables <- c("openc.x", "ind_valueadd", "elect_comp")
dvs_v <- c("lambda_mean_wghtd", "lambda_mean_wghtd_con", "lambda_mean_wghtd_prod", "lambda_mean_wghtd_comp")
corporatism <- c("ri", "corp_all", "corp_allsm", "corp_core", "corp_cor_esm", "corpo_f_cor_esm")
# Loop to run models and generate plots
models_list <- list()
plots_list <- list()
for (var1 in corporatism) {
for (dv in dvs_v) {
for (var2 in variables) {
formula <- as.formula(paste0(dv, "~", var1, "*", var2, " + fossfuel_prodpercap + realgdpgr.x + unemp + ja20f_v2 | countryid + year"))
model_name <- paste(dv, var1, var2, sep = "__")
models_list[[model_name]] <- run_model(formula, data = finnegan_merged, model_name)
plot_list[[model_name]] <- plot_slopes(models_list[[model_name]],
variables = var2,
by = var1) +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var2, "on", dv, "by", var1),
x = var2) +
theme_minimal()
}
}
}
for (var1 in corporatism) {
for (dv in dvs_v) {
for (var2 in variables) {
formula <- as.formula(paste0(dv, "~", var1, "*", var2, " + fossfuel_prodpercap + realgdpgr.x + unemp + ja20f_v2 | countryid + year"))
model_name <- paste(dv, var1, var2, sep = "__")
models_list[[model_name]] <- run_model(formula, data = finnegan_merged, model_name)
plots_list[[model_name]] <- plot_slopes(models_list[[model_name]],
variables = var2,
by = var1) +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var2, "on", dv, "by", var1),
x = var2) +
theme_minimal()
}
}
}
lapply(plots_list, print)
# Output models and plots
lapply(models_list, marginaleffects)
# Output models and plots
lapply(models_list, summary)
for (var1 in corporatism) {
for (dv in dvs_v) {
for (var2 in variables) {
formula <- as.formula(paste0(dv, "~", var1, "*", var2, " + fossfuel_prodpercap + realgdpgr.x + unemp + ja20f_v2 | countryid + year"))
model_name <- paste(dv, var1, var2, sep = "__")
models_list[[model_name]] <- run_model(formula, data = finnegan_merged, model_name)
plots_list[[model_name]] <- plot_slopes(models_list[[model_name]], rug = T,
variables = var2,
by = var1) +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var2, "on", dv, "by", var1),
x = var2) +
theme_minimal()
print(plots_list[[model_name]])
}
}
}
for (var1 in corporatism) {
for (dv in dvs_v) {
for (var2 in variables) {
formula <- as.formula(paste0(dv, "~", var1, "*", var2, " + fossfuel_prodpercap + realgdpgr.x + unemp + ja20f_v2 | countryid + year"))
model_name <- paste(dv, var1, var2, sep = "__")
models_list[[model_name]] <- run_model(formula, data = finnegan_merged, model_name)
plots_list[[model_name]] <- plot_slopes(models_list[[model_name]], rug = T,
variables = var1,
by = var2) +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var1, "on", dv, "by", var2),
x = var2) +
theme_minimal()
print(plots_list[[model_name]])
}
}
}
for (var1 in corporatism) {
for (dv in dvs_v) {
for (var2 in variables) {
formula <- as.formula(paste0(dv, "~", var1, "*", var2, " + fossfuel_prodpercap + realgdpgr.x + unemp + ja20f_v2 | countryid + year"))
model_name <- paste(dv, var1, var2, sep = "__")
models_list[[model_name]] <- run_model(formula, data = finnegan_merged, model_name)
plots_list[[model_name]] <- plot_slopes(models_list[[model_name]], rug = T,
variables = var1,
by = var2) +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var1, "on", dv, "by", var2),
x = var2) +
theme_minimal()
print(plots_list[[model_name]])
ggsave(paste0(here(), "/06 Figures and tables/ME exploratory/", model_name, ".png"),
width = 9, height = 6, unit = "in", dpi = 300)
}
}
}
for (var1 in corporatism) {
for (dv in dvs_v) {
for (var2 in variables) {
formula <- as.formula(paste0(dv, "~", var1, "*", var2, " + fossfuel_prodpercap + realgdpgr.x + unemp + ja20f_v2 | countryid + year"))
model_name <- paste(dv, var1, var2, sep = "__")
models_list[[model_name]] <- run_model(formula, data = finnegan_merged, model_name)
plots_list[[model_name]] <- plot_slopes(models_list[[model_name]], rug = T,
variables = var1,
by = var2) +
geom_hline(yintercept = 0, linetype = "dashed") +
labs(title = paste("Marginal Effect of", var1, "on", dv, "by", var2),
x = var2) +
theme_minimal()
print(plots_list[[model_name]])
ggsave(paste0(here(), "/06 Figures and tables/Figures/ME exploratory/", model_name, ".png"),
width = 9, height = 6, unit = "in", dpi = 300)
}
}
}
################################
# Preliminaries
################################
# Load packages
library(tidyverse)  # includes dplyr, ggplot2, tidyr, readr, purrr, tibble, stringr, forcats
library(readxl)     # For reading Excel files
library(data.table) # For fast data manipulation
library(countrycode) # For converting country names to codes
library(tidylog)    # For enhanced error messages
library(arrow)      # Efficient data reading and writing
library(janitor)    # For clean_names()
library(here)       # For constructing paths
library(fixest)     # For fast fixed effects estimations models
library(fwlplot)    # For fixest plots
library(kableExtra) # For enhanced table output
library(patchwork)  # For combining plots
library(modelsummary) # For model output
library(marginaleffects) # For marginal effects plots
library(kableExtra) # For enhanced table output
library(scales)    # For formatting axes
library(patchwork) # For combining plots
library(haven)     # For reading Stata files
# import data
## write function importing data
import_data <- function(file_path) {
tryCatch({
ext <- tools::file_ext(file_path)
data <- switch(ext,
csv = read_csv_arrow(file_path) %>% clean_names(),
xlsx = read_xlsx(file_path) %>% clean_names() %>% remove_empty(which = c("cols", "rows")),
rds = readRDS(file_path) %>% clean_names(),
dta = read_dta(file_path) %>% clean_names(),
parquet = read_parquet(file_path) %>% clean_names(),
stop("Unsupported file type")
)
# Assign data frame to the global environment, stripping extension and replacing non-alphanumeric characters
data_name <- gsub("[^[:alnum:]_]", "", tools::file_path_sans_ext(basename(file_path)))
assign(data_name, data, envir = .GlobalEnv)
return(data)
}, error = function(e) {
message("Failed to load ", file_path, ": ", e$message)
NULL  # Return NULL on error
})
}
## specify folder of interest and apply function to all files in folder
data_folder <- list.files(file.path(here(), "/03 Cleaned data/OECD CAPMF/"), full.names = TRUE)
map(list.files(data_folder, full.names = T), ~import_data(.x))
################################
# Descriptive results
################################
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv, obs_value, starts_with("corp"), openc, realgdpgr, netu_ipol, ag_lnd_totl_k2, gc_tax_totl_gd_zs,
contains("gdp"), contains("polcon"), population_x, gdp_x, contains("coal"),
contains("fossil"), concert, environ_worry_interpolated, eps, contains("eco_cip"))
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
grep("corp|gdp|trade|fossil|polcon|coal|eco_cip", names(.)),
starts_with("corp"),
openc, realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
grep("corp|gdp|trade|fossil|polcon|coal|eco_cip", names(.)),
starts_with("corp"),
openc, realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
corp_all,
corp_core,
grep("gdp|trade|fossil|polcon|coal|eco_cip", names(.)),
starts_with("corp"),
openc, realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
corp_all,
corp_core,
polconiii,
polconv,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc, realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
## Summary statistics of key dependent and independent variables
oecd_stringency_LEV4 %>%
select(unhappy_with_env_preserv,
obs_value,
corp_all,
corp_core,
polconiii,
polconv,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc, realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
oecd_merged %>%
filter(ny_gdp_pcap_cd < 0) %>% View()
oecd_merged %>%
filter(ny_gdp_pcap_cd == min(ny_gdp_pcap_cd, na.rm = T)) %>% View()
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconv,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc, realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii_vdem,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x, concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F)
oecd_merged %>%
filter(ny_gdp_pcap_cd == min(ny_gdp_pcap_kd_zg, na.rm = T)) %>% View()
oecd_merged %>%
filter(ny_gdp_pcap_kd_zg == min(ny_gdp_pcap_kd_zg, na.rm = T)) %>% View()
oecd_merged %>%
filter(realgdpgr == min(realgdpgr, na.rm = T)) %>% View()
oecd_merged %>%
filter(co2_including_luc_per_capita == min(co2_including_luc_per_capita, na.rm = T)) %>% View()
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F, fmt = 3)
options(scipen = 9999)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(unhappy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F, fmt = 3)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(happy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated) %>%
datasummary_skim(histogram = F, fmt = 3)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(happy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated,
eu) %>%
datasummary_skim(histogram = F, fmt = 3, by = eu)
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(happy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated,
income) %>%
datasummary_skim(histogram = F, fmt = 3, by = "income")
## Summary statistics of key dependent and independent variables
oecd_merged %>%
select(happy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated,
eu) %>%
datasummary_skim(histogram = F, fmt = 3, by = "eu")
## Summary statistics of key dependent and independent variables
oecd_merged %>%
mutate(eu = ifelse(eu == 1, "EU", "Non-EU")) %>%
select(happy_with_env_preserv,
obs_value,
obs_value1,
corp_all,
corp_core,
polconiii,
polconiii_vdem,
polconv,
polconv_vdem,
grep("gdp|trade|fossil|co2|coal|eco_cip", names(.)),
starts_with("corp"),
openc,
realgdpgr,
netu_ipol,
ag_lnd_totl_k2,
gc_tax_totl_gd_zs,
population_x,
concert,
environ_worry_interpolated,
eu) %>%
datasummary_skim(histogram = F, fmt = 3, by = "eu")
