left_join(collective_bar_post90,
by = c("iso3c" = "COU", "time_period" = "Time")) %>%
left_join(ictwsspost90,
by = c("iso3c", "time_period" = "year")) %>%
left_join(kayser_rehmert,
by = c("iso3c" = "iso3", "time_period" = "year")) %>%
left_join(gallup_overall,
by = c("iso3c", "time_period" = "year")) %>%
zap_labels()
## 16. Gallup data
gallup_overall <- gallup_merged %>%
rename("country" = geography,
"year" = time,
"happy_with_env_preserv" = satisfied,
"unhappy_with_env_preserv" = dissatisfied) %>%
mutate(iso3c = countrycode(country, "country.name.en", "iso3c"),
year = as.numeric(as.character(year))) %>%
select(country, iso3c, year, everything()) %>%
arrange(year, country)
## merge oecd with host of other data
oecd_merged <- oecd %>%
left_join(wdi_post90, by = c("iso3c" = "iso3c_new", "time_period" = "year")) %>%
left_join(corporatism,
by = c("iso3c", "time_period" = "year")) %>%
left_join(corporatism_core,
by = c("iso3c", "time_period" = "year")) %>%
left_join(cpds_post90,
by = c("iso3c", "time_period" = "year")) %>%
left_join(bmr_post90,
by = c("iso3c" = "iso_code", "time_period" = "year")) %>%
left_join(polcon_pruned,
by = c("iso3c", "time_period" = "year")) %>%
left_join(fetzer_yotzo_post90_pruned,
by = c("iso3c", "time_period" = "year")) %>%
left_join(kayser_comp_post90,
by = c("iso3c" = "isocode", "time_period" = "elecyr")) %>%
left_join(owid_energy_post90,
by = c("iso3c" = "iso_code", "time_period" = "year")) %>%
left_join(owid_co2_post90,
by = c("iso3c" = "iso_code", "time_period" = "year")) %>%
left_join(trade_union_post90,
by = c("iso3c" = "LOCATION", "time_period" = "Time")) %>%
left_join(collective_bar_post90,
by = c("iso3c" = "COU", "time_period" = "Time")) %>%
left_join(ictwsspost90,
by = c("iso3c", "time_period" = "year")) %>%
left_join(kayser_rehmert,
by = c("iso3c" = "iso3", "time_period" = "year")) %>%
left_join(gallup_overall,
by = c("iso3c", "time_period" = "year")) %>%
zap_labels()
# create two separate datasets for adoption and stringency
oecd_stringency <- oecd_merged %>% filter(grepl("Policy stringency", measure_2))
oecd_adoption <- oecd_merged %>% filter(grepl("Adopted", measure_2))
## create separate datasets for different levels
## lists
oecd_adoption_list <- list()
oecd_stringency_list <- list()
## loop
for(k in c("LEV1", "LEV2", "LEV3", "LEV4")){
# prune adoption data
oecd_adoption_list[[k]] <- oecd_adoption %>%
filter(grepl(paste0("^", k), clim_act_pol))
# prune stringency data
oecd_stringency_list[[k]] <- oecd_stringency %>%
filter(grepl(paste0("^", k), clim_act_pol))
}
## finnegan with cpds and corporatism
finnegan_merged <- finnegan %>%
left_join(cpds,
by = c("iso3c", "year")) %>%
left_join(corporatism,
by = c("iso3c", "year")) %>%
left_join(corporatism_core,
by = c("iso3c", "year"))
## save these data
write_csv_arrow(oecd_merged, paste0(here(), "/03 Cleaned data/oecd_merged.csv"))
write_rds(oecd_merged, paste0(here(), "/03 Cleaned data/oecd_merged.rds"))
write_csv_arrow(finnegan_merged, paste0(here(), "/03 Cleaned data/finnegan_merged.csv"))
### save the different levels of stringency and adoption
map(c("LEV1", "LEV2", "LEV3", "LEV4"), ~{
write_csv_arrow(oecd_adoption_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_adoption_", .x, ".csv"))
write_rds(oecd_adoption_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_adoption_", .x, ".rds"))
write_csv_arrow(oecd_stringency_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_stringency_", .x, ".csv"))
write_rds(oecd_stringency_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_stringency_", .x, ".rds"))
})
# Load essential libraries
library(tidyverse)
library(data.table)
library(readxl)
library(openxlsx)
library(here)
library(janitor)
library(arrow)
# Function to read datasets with error handling
read_data <- function(path, type = "csv") {
full_path <- paste0(here(), path)
tryCatch({
if (type == "dta") {
return(fread(full_path))
} else if (type == "csv") {
return(read_csv(full_path) %>% clean_names())
} else if (type == "arrow") {
return(read_csv_arrow(full_path))
}
}, error = function(e) {
message("Failed to read ", path, ": ", e$message)
return(NULL)
})
}
finnegan <- read_data("/01 Raw data/Climate policy/Long_Term_Policymaking.dta", "dta")
oecd <- read_data("/01 Raw data/Climate policy/CAPMF_official.csv", "csv")
# Corporatism data
corporatism <- read_data("/01 Raw data/Corporatism/corporatism_jahn/CorporatismusALL.dta", "dta")
corporatism_core <- read_data("/01 Raw data/Corporatism/corporatism_jahn/Corporatismus_core.dta", "dta")
ictwss <- read_data("/01 Raw data/Corporatism/OECD-AIAS-ICTWSS-CSV_v1.1.csv", "arrow")
# Function to merge datasets with logging of key actions
merge_datasets <- function(x, y, by_cols) {
tryCatch({
return(left_join(x, y, by = by_cols))
}, error = function(e) {
message("Failed to merge datasets: ", e$message)
return(NULL)
})
}
# Merging datasets with proper error handling and simplification
finnegan_merged <- merge_datasets(finnegan, corporatism, c("iso3c" = "iso3", "year"))
finnegan_merged <- merge_datasets(finnegan_merged, corporatism_core, c("iso3c" = "iso3", "year"))
#################################
# Preliminaries
#################################
# load packages
library(tidyverse)
library(data.table)
library(countrycode)
library(tidylog)
library(readxl)
library(openxlsx)
library(here)
library(janitor)
library(arrow)
library(furrr)
library(WDI)
library(modelsummary)
library(OECD)
library(eurostat)
library(fixest)
library(fwlplot)
library(marginaleffects)
library(kableExtra)
library(haven)
library(scales)
library(patchwork)
# import data
## Climate policy data
finnegan <- read_dta(paste0(here(), "/01 Raw data/Climate policy/Long_Term_Policymaking.dta"))
oecd <- read_csv(paste0(here(), "/01 Raw data/Climate policy/CAPMF_official.csv")) %>% clean_names()
## Corporatism
corporatism <- read_dta(paste0(here(), "/01 Raw data/Corporatism/corporatism_jahn/CorporatismusALL.dta"))
corporatism_core  <- read_dta(paste0(here(), "/01 Raw data/Corporatism/corporatism_jahn/Corporatismus_core.dta"))
ictwss <- read_csv_arrow(paste0(here(), "/01 Raw data/Corporatism/OECD-AIAS-ICTWSS-CSV_v1.1.csv"))
## Moderators and controls
cpds <- read_dta(paste0(here(), "/01 Raw data/Controls and other/CPDS_1960-2021_Update_2023.dta"))
trade_union <- read_csv(paste0(here(), "/01 Raw data/Controls and other/OECD_trade_union.csv"))
collective_bar <- read_csv(paste0(here(), "/01 Raw data/Controls and other/OECD_collective_bargaining.csv"))
co2trade15 <- read_csv(paste0(here(), "/01 Raw data/Controls and other/OECD_IO_GHG_2015.csv"))
gva <- read_csv_arrow(paste0(here(), "/01 Raw data/Controls and other/OECD_SNA_TABLE6.csv"))
fetzer_yotzo <- read_dta(paste0(here(), "/01 Raw data/Controls and other/election_shocks_20230924.dta"))
WDI_data <- read_csv(paste0(here(), "/01 Raw data/Controls and other/WDI_data.csv"))
bmr <- read_csv(paste0(here(), "/01 Raw data/Controls and other/democracy-v4.0.csv"))
owid_energy <- read_csv_arrow("https://nyc3.digitaloceanspaces.com/owid-public/data/energy/owid-energy-data.csv")
owid_co2 <- read_csv_arrow("https://nyc3.digitaloceanspaces.com/owid-public/data/co2/owid-co2-data.csv")
polcon <- read_xlsx(paste0(here(), "/01 Raw data/Controls and other/POLCON_2021_VDEM.xlsx"))
epu_all_countries <- read_xlsx(paste0(here(),
"/01 Raw data/Controls and other/All_Country_Data_Policy_Uncertainty.xlsx")) %>%
clean_names()
kayser_comp <- read_delim(paste0(here(), "/01 Raw data/Controls and other/lprdata_distrib_augmented_2015.csv"),
delim = ";")
### import cip data - static
cip_static <- list.files(paste0(here(), "/01 Raw data/Controls and other/CIP/CIP_static")) %>%
map_dfr(~read_delim(paste0(here(), "/01 Raw data/Controls and other/CIP/CIP_static/", .x),
delim = ";") %>%
mutate(excluding_parlgov_id = as.numeric(as.character(excluding_parlgov_id))))
### import cip data - dynamic
cip_dynamic <- list.files(paste0(here(), "/01 Raw data/Controls and other/CIP/CIP_dynamic")) %>%
map_dfr(~read_delim(paste0(here(), "/01 Raw data/Controls and other/CIP/CIP_dynamic/", .x),
locale = locale(decimal_mark = ","),
delim = ";") %>%
remove_empty(which = c("rows", "cols")) %>%
mutate(excluding_parlgov_id = as.numeric(as.character(excluding_parlgov_id)),
polls = as.numeric(as.character(polls))))
## kayser/rehmert - PSRM/LQS data
kayser_rehmert <- readRDS(paste0(here(), "/01 Raw data/Controls and other/data_eps_kayser_rehmert.RDS"))
## gallup data
control_folder <- list.files(paste0(here(), "/01 Raw data/Controls and other"))
gallup_list <- control_folder[grepl("^GallupAnalytics", control_folder)]
gallup <- map(gallup_list,
~read_xlsx(paste0(here(), "/01 Raw Data/Controls and other/", .x),
skip = 6) %>%
clean_names() %>%
remove_empty(which = c("rows", "cols")) %>%
select(-contains("demographic")))
gallup_merged <- gallup[[1]] %>%
left_join(gallup[[2]], by = c("geography", "time"),
suffix = c("env", "confgov")) %>%
left_join(gallup[[3]], by = c("geography", "time"),
suffix = c("confgov", "corrupt"))
#################################
# Data wrangling
#################################
### To Do: prune the data more radically. Make sure that only relevant columns are kept.
## 1. CAPMF data
oecd <- oecd %>% mutate(obs_value1 = obs_value)
# replace zeroes with missing values
is.na(oecd$obs_value) <- oecd$obs_value == 0.000000
# select only meaningful columns
for(i in names(oecd)){
levels <- nlevels(factor(oecd[[i]]))
if(levels == 1 | sum(is.na(oecd[[i]])) == nrow(oecd)){
oecd <<- oecd %>% select(-i)
} else{
next
}
}
# create new variables (for fixed effects)
oecd <- oecd %>%
# delete values for European Union
filter(!grepl("European Union", reference_area)) %>%
mutate(region23 = countrycode(reference_area, "country.name", "region23"),
iso3c = countrycode(reference_area, "country.name", "iso3c"),
# for fixed effects estimations in different project
half_decade = case_when(time_period >= 1990 & time_period < 1995 ~ "1990-1994",
time_period >= 1995 & time_period < 2000 ~ "1995-1999",
time_period >= 2000 & time_period < 2005 ~ "2000-2004",
time_period >= 2005 & time_period < 2010 ~ "2005-2009",
time_period >= 2010 & time_period < 2015 ~ "2010-2014",
time_period >= 2015 & time_period < 2020 ~ "2015-2019",
time_period >= 2020 & time_period <= 2022 ~ "2020-2022",
TRUE ~ NA))
## 2. Corporatism data
corporatism <- corporatism %>%
mutate(iso3c = countrycode(country, "country.name", "iso3c")) %>%
select(country, iso3c, year, everything())
## same for corporatims_core
corporatism_core <- corporatism_core %>%
mutate(iso3c = countrycode(country, "country.name", "iso3c")) %>%
select(country, iso3c, year, everything())
## post 90 version
corporatism_post90 <- corporatism %>%
filter(year >= 1990)
## post 90 version for corporatism_core
corporatism_core_post90 <- corporatism_core %>%
filter(year >= 1990)
## 3. WDI
# to be able to delete pre-classified groups of countries, create new iso3c identifier
WDI_data <- WDI_data %>%
mutate(iso3c_new = countrycode(country, "country.name", "iso3c"))
wdi_post90 <- WDI_data %>%
# restrict data to individual countries, rather than pre-classified groups of countries
filter(year >= 1990, !is.na(iso3c))
# table with variable definitions
wdi_indicators <- c("BG.GSR.NFSV.GD.ZS", "SP.POP.TOTL", "AG.LND.TOTL.K2",
"GC.TAX.TOTL.GD.ZS", "EN.ATM.CO2E.PC", "NE.TRD.GNFS.ZS",
"NV.IND.MANF.ZS", "NV.IND.TOTL.ZS", "NY.GDP.COAL.RT.ZS",
"NY.GDP.FRST.RT.ZS", "NY.GDP.MINR.RT.ZS", "NY.GDP.NGAS.RT.ZS",
"NY.GDP.PETR.RT.ZS", "NY.GDP.PCAP.CD", "NY.GDP.PCAP.KD",
"NY.GDP.PCAP.KD.ZG", "NY.TTF.GNFS.KN", "NV.IND.TOTL.KD", "GC.TAX.INTT.RV.ZS")
WDIcache()[[1]] %>%
filter(indicator %in% wdi_indicators) %>%
kableExtra::kable(col.names = c("Indicator code", "Name",
"Description", "Source", "Source organisation"),
format = "latex", longtable = T) %>%
kable_styling(full_width = T, repeat_header_continued = T,
latex_table_env = "tabularx") %>%
save_kable(paste0(here(), "/06 Figures and tables/Tables/WDI_indicators.tex"))
## 4. BMR data
bmr <- bmr %>%
mutate(iso_code = countrycode(country, "country.name", "iso3c"))
## The usual suspects prove somewhat difficult to assign an iso3 code to.
bmr_post90 <- bmr %>%
filter(year >= 1990, !is.na(iso_code), country != "GERMANY, WEST")
## 5. Polcon data
polcon_pruned <- polcon %>%
select(-grep("^(party|p1[0-5]|p[1-9]|p[1-9][0-9]|executive|prime|align|tsu|tsl|polity|leg|cyear|ccode|cnts|icrg|ctry|country_text_id)",
names(polcon))) %>%
mutate(iso3c = countrycode(country_name, "country.name", "iso3c")) %>%
select(country_name, iso3c, year, everything())
polcon_post90 <- polcon_pruned %>%
filter(year >= 1990)
## 6. CPDS data
cpds <- cpds %>%
select(country, year, eu, emu, grep("^ud|netu|openc|gdp", names(cpds))) %>%
mutate(iso3c = countrycode(country, "country.name", "iso3c")) %>%
select(country, iso3c, year, everything())
## post 90 version
cpds_post90 <- cpds %>%
filter(year >= 1990)
## 7. Finnegan data
country <- c("1" = "Australia",
"2" = "Austria",
"3" = "Belgium",
"4" = "Canada",
"5" = "Denmark",
"6" = "Finland",
"7" = "France",
"8" = "Germany",
"9" = "Greece",
"10" = "Ireland",
"11" = "Italy",
"12" = "Japan",
"13" = "Netherlands",
"14" = "New Zealand",
"15" = "Norway",
"16" = "Portugal",
"17" = "Spain",
"18" = "Sweden",
"19" = "Switzerland",
"20" = "United Kingdom",
"21" = "United States")
# create new variable
finnegan <- finnegan %>%
mutate(country_long = factor(countryid,
levels = c("1", "2",
"3", "4", "5",
"6", "7", "8",
"9", "10", "11",
"12", "13", "14",
"15", "16", "17",
"18", "19", "20",
"21"),
labels = country),
iso3c = countrycode(country_long, "country.name.en", "iso3c")) %>%
select(countryid, country_long, iso3c, everything())
## 8. OWID
### energy data
owid_energy_pruned <- owid_energy %>%
select(country, year, iso_code, population, gdp, contains("share"),
contains("per_capita"))
### co2 data
owid_co2_pruned <- owid_co2 %>%
select(country, year, iso_code, population, gdp, contains("per_gdp"),
contains("per_capita"), contains("share"))
# post 90 versions
owid_energy_post90 <- owid_energy_pruned %>%
filter(year >= 1990)
owid_co2_post90 <- owid_co2_pruned %>%
filter(year >= 1990)
## 9. Fetzer/Yotzo data
fetzer_yotzo <- fetzer_yotzo %>%
mutate(iso3c = countrycode(isocntry, "iso2c", "iso3c"),
cntry_name = countrycode(isocntry, "iso2c", "country.name.en")) %>%
select(cntry_name, isocntry, iso3c, year, everything())
fetzer_yotzo %>% filter(year >= 1990) -> fetzer_yotzo_post90
fetzer_yotzo_post90_pruned <- fetzer_yotzo_post90 %>%
# for some observations, multiple close elections occur within a year
# very rudimentary approach: only keep one of these (not perfect, but ok)
distinct(iso3c, year, .keep_all = T)
## 10. trade_union data
trade_union <- trade_union %>%
mutate(cntry_name = countrycode(LOCATION, "iso3c", "country.name.en")) %>%
rename("share_employees_trade_union" = ObsValue) %>%
select(cntry_name, LOCATION, Time, everything())
trade_union %>% filter(Time >= 1990) -> trade_union_post90
## 11. collective_bar data (same as for trade_union data)
collective_bar <- collective_bar %>%
mutate(cntry_name = countrycode(COU, "iso3c", "country.name.en")) %>%
rename("share_employees_collective_bar" = ObsValue) %>%
select(cntry_name, COU, Time, everything())
collective_bar %>% filter(Time >= 1990) -> collective_bar_post90
## 12. Kayser data
kayser_comp <- kayser_comp %>%
mutate(cntry_name = countrycode(isocode, "iso3c", "country.name.en"),
cntry_name = ifelse(isocode == "AUL", "Australia", cntry_name)) %>%
select(case, cnum, isocode, cntry_name, elecyr, everything())
kayser_comp %>% filter(elecyr >= 1990) -> kayser_comp_post90
## 13. coalition leverage (cip) data (pruned dynamic version)
cip_dynamic_pruned <- cip_dynamic %>%
mutate(country = ifelse(is.na(country) & !is.na(germany), "germany", country),
iso3c = countrycode(country, "country.name.en", "iso3c")) %>%
select(country, year, iso3c, everything()) %>%
select(-germany) %>%
filter(year >= 1990)
## take average values for all numeric variables and keep only the distinct ones; then merge
cip_dynamic_pruned_avg <- cip_dynamic_pruned %>%
group_by(country, year, party_name) %>%
mutate(avg_polls = mean(polls, na.rm = T)) %>%
ungroup() %>%
distinct(country, year, party_name, avg_polls, .keep_all = T)
### To use this, it is probably wise to use the Green party CIP.
## 14. Kayser/Rehmert wrangling
kayser_rehmert <- kayser_rehmert %>%
mutate(iso3 = countrycode(country, "country.name", "iso3c")) %>%
select(country, iso3, year, everything())
## follow kayser et al. by adding the following variables
kayser_rehmert <- kayser_rehmert %>%
mutate(decades = case_when((year >= 1990 & year <= 1994) ~ 1,
(year >= 1995 & year <= 1999) ~ 2,
(year >= 2000 & year <= 2004) ~ 3,
(year >= 2005 & year <= 2009) ~ 4,
TRUE ~ 5),
kyoto = case_when((country == "austria" & year >= 1998) ~ 1,
(country == "czechia" & year >= 1998) ~ 1,
(country == "denmark" & year >= 1998) ~ 1,
(country == "estonia" & year >= 1998) ~ 1,
(country == "finland" & year >= 1998) ~ 1,
(country == "germany" & year >= 1998) ~ 1,
(country == "greece" & year >= 1998) ~ 1,
(country == "ireland" & year >= 1998) ~ 1,
(country == "italy" & year >= 1998) ~ 1,
(country == "japan" & year >= 1998) ~ 1,
(country == "netherlands" & year >= 1998) ~ 1,
(country == "new zealand" & year >= 1998) ~ 1,
(country == "norway" & year >= 1998) ~ 1,
(country == "portugal" & year >= 1998) ~ 1,
(country == "slovakia" & year >= 1998) ~ 1,
(country == "slovenia" & year >= 1998) ~ 1,
(country == "spain" & year >= 1998) ~ 1,
(country == "sweden" & year >= 1998) ~ 1,
TRUE ~ 0),
fukushima = ifelse(year >= 2011, 1, 0)) %>%
filter(year >= 1990)
## 15. ICTWSS
ictwsspost90 <- ictwss %>% filter(year > 1990)
## 16. Gallup data
gallup_overall <- gallup_merged %>%
rename("country" = geography,
"year" = time,
"happy_with_env_preserv" = satisfied,
"unhappy_with_env_preserv" = dissatisfied) %>%
mutate(iso3c = countrycode(country, "country.name.en", "iso3c"),
year = as.numeric(as.character(year))) %>%
select(country, iso3c, year, everything()) %>%
arrange(year, country)
#################################
# Merging and saving data
#################################
## merge oecd with host of other data
oecd_merged <- oecd %>%
left_join(wdi_post90, by = c("iso3c" = "iso3c_new", "time_period" = "year")) %>%
left_join(corporatism,
by = c("iso3c", "time_period" = "year")) %>%
left_join(corporatism_core,
by = c("iso3c", "time_period" = "year")) %>%
left_join(cpds_post90,
by = c("iso3c", "time_period" = "year")) %>%
left_join(bmr_post90,
by = c("iso3c" = "iso_code", "time_period" = "year")) %>%
left_join(polcon_pruned,
by = c("iso3c", "time_period" = "year")) %>%
left_join(fetzer_yotzo_post90_pruned,
by = c("iso3c", "time_period" = "year")) %>%
left_join(kayser_comp_post90,
by = c("iso3c" = "isocode", "time_period" = "elecyr")) %>%
left_join(owid_energy_post90,
by = c("iso3c" = "iso_code", "time_period" = "year")) %>%
left_join(owid_co2_post90,
by = c("iso3c" = "iso_code", "time_period" = "year")) %>%
left_join(trade_union_post90,
by = c("iso3c" = "LOCATION", "time_period" = "Time")) %>%
left_join(collective_bar_post90,
by = c("iso3c" = "COU", "time_period" = "Time")) %>%
left_join(ictwsspost90,
by = c("iso3c", "time_period" = "year")) %>%
left_join(kayser_rehmert,
by = c("iso3c" = "iso3", "time_period" = "year")) %>%
left_join(gallup_overall,
by = c("iso3c", "time_period" = "year")) %>%
zap_labels()
## remove some unncessary columns
vars_to_remove <- names(oecd_merged)[grepl(".x|.y", names(oecd_merged))]
vars_to_remove
## remove some unncessary columns
vars_to_remove <- names(oecd_merged)[grepl(".x.x|.y.y", names(oecd_merged))]
vars_to_remove
oecd_merged <- oecd_merged %>% select(-vars_to_remove)
# create two separate datasets for adoption and stringency
oecd_stringency <- oecd_merged %>% filter(grepl("Policy stringency", measure_2))
oecd_adoption <- oecd_merged %>% filter(grepl("Adopted", measure_2))
## create separate datasets for different levels
## lists
oecd_adoption_list <- list()
oecd_stringency_list <- list()
## loop
for(k in c("LEV1", "LEV2", "LEV3", "LEV4")){
# prune adoption data
oecd_adoption_list[[k]] <- oecd_adoption %>%
filter(grepl(paste0("^", k), clim_act_pol))
# prune stringency data
oecd_stringency_list[[k]] <- oecd_stringency %>%
filter(grepl(paste0("^", k), clim_act_pol))
}
## finnegan with cpds and corporatism
finnegan_merged <- finnegan %>%
left_join(cpds,
by = c("iso3c", "year")) %>%
left_join(corporatism,
by = c("iso3c", "year")) %>%
left_join(corporatism_core,
by = c("iso3c", "year"))
write_csv_arrow(oecd_merged, paste0(here(), "/03 Cleaned data/oecd_merged.csv"))
write_parquet(oecd_merged, paste0(here(), "/03 Cleaned data/oecd_merged.parquet"))
write_rds(oecd_merged, paste0(here(), "/03 Cleaned data/oecd_merged.rds"))
write_csv_arrow(finnegan_merged, paste0(here(), "/03 Cleaned data/finnegan_merged.csv"))
### save the different levels of stringency and adoption
map(c("LEV1", "LEV2", "LEV3", "LEV4"), ~{
write_csv_arrow(oecd_adoption_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_adoption_", .x, ".csv"))
write_parquet(oecd_adoption_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_adoption_", .x, ".parquet"))
write_rds(oecd_adoption_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_adoption_", .x, ".rds"))
write_csv_arrow(oecd_stringency_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_stringency_", .x, ".csv"))
write_parquet(oecd_stringency_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_stringency_", .x, ".parquet"))
write_rds(oecd_stringency_list[[.x]], paste0(here(), "/03 Cleaned data/oecd_stringency_", .x, ".rds"))
})
